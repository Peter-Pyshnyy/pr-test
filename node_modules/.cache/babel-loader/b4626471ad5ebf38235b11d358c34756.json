{"ast":null,"code":"// export const companies = () =>\n//   fetch(\"json/companies.json\")\n//     .then((res) => res.json())\n//     .then((data) => (arr = data))\n//     .then(() => console.log(arr));\n// export const tickets = () =>\n//   fetch(\"json/tickets.json\").then((res) => res.json());\n// export const segments = () =>\n//   fetch(\"json/segments.json\").then((res) => res.json());\nimport { render } from \"@testing-library/react\";\n\nasync function fetchData(path) {\n  try {\n    const response = await fetch(path);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function renderData(path) {\n  const result = await fetchData(path);\n  return result;\n}\n\nlet a = renderData(\"json/companies.json\");\nconsole.log(a);","map":{"version":3,"sources":["C:/Users/Petya/Desktop/proging/webdev/rct/aviation/src/scripts/data.js"],"names":["render","fetchData","path","response","fetch","data","json","error","console","renderData","result","a","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,wBAAvB;;AAEA,eAAeC,SAAf,CAAyBC,IAAzB,EAA+B;AAC7B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AAED,eAAeE,UAAf,CAA0BP,IAA1B,EAAgC;AAC9B,QAAMQ,MAAM,GAAG,MAAMT,SAAS,CAACC,IAAD,CAA9B;AACA,SAAOQ,MAAP;AACD;;AAED,IAAIC,CAAC,GAAGF,UAAU,CAAC,qBAAD,CAAlB;AACAD,OAAO,CAACI,GAAR,CAAYD,CAAZ","sourcesContent":["// export const companies = () =>\r\n//   fetch(\"json/companies.json\")\r\n//     .then((res) => res.json())\r\n//     .then((data) => (arr = data))\r\n//     .then(() => console.log(arr));\r\n// export const tickets = () =>\r\n//   fetch(\"json/tickets.json\").then((res) => res.json());\r\n// export const segments = () =>\r\n//   fetch(\"json/segments.json\").then((res) => res.json());\r\n\r\nimport { render } from \"@testing-library/react\";\r\n\r\nasync function fetchData(path) {\r\n  try {\r\n    const response = await fetch(path);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nasync function renderData(path) {\r\n  const result = await fetchData(path);\r\n  return result;\r\n}\r\n\r\nlet a = renderData(\"json/companies.json\");\r\nconsole.log(a);\r\n"]},"metadata":{},"sourceType":"module"}