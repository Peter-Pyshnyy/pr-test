{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Petya\\\\Desktop\\\\proging\\\\webdev\\\\rct\\\\aviation\\\\src\\\\components\\\\TicketList.js\";\nimport React from \"react\";\nimport \"./component-styles/card.css\";\nimport FlightTicket from \"./FlightTicket\"; //import { tickets } from \"../scripts/data\";\n\nimport { useEffect, useState } from \"react/cjs/react.production.min\"; // async function getTickets() {\n//   let ticketsArray = [];\n//   tickets().then((data) => {\n//     data.sort((a, b) => {\n//       return a.price - b.price;\n//     });\n//     for (let i = 0; i < 5; i++) {\n//       ticketsArray.push(\n//         <li key={data[i].id}>\n//           <FlightTicket ticket={data[i]} />\n//         </li>\n//       );\n//     }\n//   });\n//   console.log(ticketsArray);\n//   return await ticketsArray;\n// }\n// const TicketList = () => {\n//   let tickets = getTickets();\n//   console.log(tickets);\n//   return (\n//     <div className=\"Tickets\">\n//       <ul></ul>\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TicketList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      ticket: null,\n      displayed: 0,\n      sortType: 0\n    };\n  }\n\n  async componentDidMount() {\n    let arr = [];\n    let sortedArr = [];\n    const res = await fetch(\"json/tickets.json\");\n    const data = await res.json();\n    sortedArr = sort(this.state.sortType, data);\n\n    for (let i = this.state.displayed; i < 5; i++) {\n      arr.push(sortedArr[i]);\n      this.setState({\n        displayed: i\n      });\n    }\n\n    this.setState({\n      ticket: arr,\n      loading: false\n    });\n    getSegments(arr[0]);\n    durationSort(arr[0], arr[1]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading || !this.state.ticket ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.ticket.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(FlightTicket, {\n                ticket: e\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction sort(type, data) {\n  let arr = data;\n\n  switch (type) {\n    case 0:\n      arr.sort(priceSort);\n      break;\n\n    default:\n      return arr;\n  }\n\n  return arr;\n}\n\nconst priceSort = (a, b) => {\n  return a.price - b.price;\n};\n\nconst durationSort = (a, b) => {\n  let durationA,\n      durationB = 0;\n  getSegments(a).map(e => {});\n  console.log(durationA + \" \" + durationB);\n};\n\nconst getSegments = async ticket => {\n  let segments = [];\n  let segmentsAmount = ticket.segments.length;\n  const res = await fetch(\"json/segments.json\");\n  const data = await res.json();\n  data.map(segment => {\n    let found = false;\n\n    for (let i = 0; i < segmentsAmount; i++) {\n      found = ticket.segments[i] == segment.id;\n      if (found) segments.push(segment);\n    }\n  });\n  console.log(segments);\n  return segments;\n};","map":{"version":3,"sources":["C:/Users/Petya/Desktop/proging/webdev/rct/aviation/src/components/TicketList.js"],"names":["React","FlightTicket","useEffect","useState","TicketList","Component","state","loading","ticket","displayed","sortType","componentDidMount","arr","sortedArr","res","fetch","data","json","sort","i","push","setState","getSegments","durationSort","render","map","e","id","type","priceSort","a","b","price","durationA","durationB","console","log","segments","segmentsAmount","length","segment","found"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./component-styles/card.css\";\r\nimport FlightTicket from \"./FlightTicket\";\r\n//import { tickets } from \"../scripts/data\";\r\nimport { useEffect, useState } from \"react/cjs/react.production.min\";\r\n\r\n// async function getTickets() {\r\n//   let ticketsArray = [];\r\n//   tickets().then((data) => {\r\n//     data.sort((a, b) => {\r\n//       return a.price - b.price;\r\n//     });\r\n\r\n//     for (let i = 0; i < 5; i++) {\r\n//       ticketsArray.push(\r\n//         <li key={data[i].id}>\r\n//           <FlightTicket ticket={data[i]} />\r\n//         </li>\r\n//       );\r\n//     }\r\n//   });\r\n\r\n//   console.log(ticketsArray);\r\n\r\n//   return await ticketsArray;\r\n// }\r\n\r\n// const TicketList = () => {\r\n//   let tickets = getTickets();\r\n\r\n//   console.log(tickets);\r\n\r\n//   return (\r\n//     <div className=\"Tickets\">\r\n//       <ul></ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default class TicketList extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    ticket: null,\r\n    displayed: 0,\r\n    sortType: 0,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let arr = [];\r\n    let sortedArr = [];\r\n    const res = await fetch(\"json/tickets.json\");\r\n    const data = await res.json();\r\n    sortedArr = sort(this.state.sortType, data);\r\n\r\n    for (let i = this.state.displayed; i < 5; i++) {\r\n      arr.push(sortedArr[i]);\r\n      this.setState({ displayed: i });\r\n    }\r\n    this.setState({ ticket: arr, loading: false });\r\n\r\n    getSegments(arr[0]);\r\n\r\n    durationSort(arr[0], arr[1]);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading || !this.state.ticket ? (\r\n          <div>loading...</div>\r\n        ) : (\r\n          <div>\r\n            <ul>\r\n              {this.state.ticket.map((e) => {\r\n                return (\r\n                  <li key={e.id}>\r\n                    <FlightTicket ticket={e} />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction sort(type, data) {\r\n  let arr = data;\r\n\r\n  switch (type) {\r\n    case 0:\r\n      arr.sort(priceSort);\r\n      break;\r\n    default:\r\n      return arr;\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nconst priceSort = (a, b) => {\r\n  return a.price - b.price;\r\n};\r\n\r\nconst durationSort = (a, b) => {\r\n  let durationA,\r\n    durationB = 0;\r\n\r\n  getSegments(a).map((e) => {});\r\n\r\n  console.log(durationA + \" \" + durationB);\r\n};\r\n\r\nconst getSegments = async (ticket) => {\r\n  let segments = [];\r\n  let segmentsAmount = ticket.segments.length;\r\n  const res = await fetch(\"json/segments.json\");\r\n  const data = await res.json();\r\n\r\n  data.map((segment) => {\r\n    let found = false;\r\n    for (let i = 0; i < segmentsAmount; i++) {\r\n      found = ticket.segments[i] == segment.id;\r\n\r\n      if (found) segments.push(segment);\r\n    }\r\n  });\r\n\r\n  console.log(segments);\r\n\r\n  return segments;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}